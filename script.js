// Оголоси змінну isValid і задай їй значенням результат перевірки рівності 
// паролей в змінних correctPassword і userPassword.

// Якщо паролі співпадають (сувора рівність), значення isValid має бути true
// Якщо паролі не співпадають, значення isValid має бути false
// Оголошена змінна correctPassword
// Оголошена змінна userPassword
// Оголошена змінна isValid
// Якщо значення userPassword дорівнює "mangodab3st", значення isValid буде false
// Якщо значення userPassword дорівнює "kiwirul3z", значення isValid буде false



// const correctPassword = "jqueryismyjam";
// const userPassword = "jque";
// const isValid=correctPassword===userPassword;


// console.log(isValid);



// ======================================================================================



// Змінна value містить величину у вигляді рядка, що складається з числової 
// частини та одиниці виміру. Наприклад, 24.5px, 14cm, 20.3vh тощо.

// Оголоси змінну numerical і доповни код таким чином, щоб:

// Якщо це можливо, значенням змінної numerical буде число з плаваючою крапкою,
//  що утворилось з рядка змінної value
// В іншому випадку, значенням numerical буде NaN.
// Оголошена змінна value
// Оголошена змінна numerical
// Якщо значення value дорівнює "24.5px", значення numerical буде 24.5
// Якщо значення value дорівнює "14cm", значення numerical буде 14
// Якщо значення value дорівнює "20.3vh", значення numerical буде 20.3
// Якщо значення value дорівнює "Poly16", значення numerical буде NaN


// const value = "24.5px";
// const numerical=Numder.parseFloat(value);

// // console.log(Number.parseFloat(value));
// console.log(Number.parseFloat(numerical));



//??????????


// =======================================================================================

// Доповни код, присвоївши змінній totalPrice вираз для підрахунку загальної суми замовлення. Змінна pricePerItem зберігає ціну за одиницю товару, а orderedQuantity - кількість одиниць товару в замовленні.

// Оголошена змінна pricePerItem
// Значення змінної pricePerItem - це число 3500
// Оголошена змінна orderedQuantity
// Значення змінної orderedQuantity - це число 4
// Оголошена змінна totalPrice
// Значення змінної totalPrice - це число 14000
// Використаний оператор *



// const pricePerItem = 3500;
// const orderedQuantity = 4;

// // Change code below this line


// console.log(pricePerItem * orderedQuantity);


// ====================================================================================


// Змінна value містить величину у вигляді рядка, що складається з 
// числової частини та одиниці виміру. Наприклад, 24.5px, 14cm, 20.3vh тощо.

// Оголоси змінну numerical і доповни код таким чином, щоб:

// Якщо це можливо, значенням змінної numerical буде число з плаваючою крапкою, 
// що утворилось з рядка змінної value
// В іншому випадку, значенням numerical буде NaN.
// Оголошена змінна value
// Оголошена змінна numerical
// Якщо значення value дорівнює "24.5px", значення numerical буде 24.5
// Якщо значення value дорівнює "14cm", значення numerical буде 14
// Якщо значення value дорівнює "20.3vh", значення numerical буде 20.3
// Якщо значення value дорівнює "Poly16", значення numerical буде NaN


// const value = "24.5px";
// let numerical;

// if (!isNaN(parseFloat(value))) {
//   numerical = parseFloat(value);
// } else {
//   numerical = NaN;
// }

// ====================================================================================


// Оголоси функцію sayHi. У тілі функції sayHi додай console.log() 
// з рядком "Hello, this is my first function!".

// Після оголошення виклич функцію sayHi.

// Очікується оголошення функції
// Функції присвоєно ім'я sayHi
// В тілі функції sayHi є console.log("Hello, this is my first function!")
// Після оголошення є виклик функції sayHi


// function sayHi(params) {
//     console.log("Hello, this is my first function!");
//   }
//   sayHi();


// ====================================================================================

// Функція add повинна вміти додавати три числа і виводити результат
//  у консоль. Оголоси для функції add три параметри: a, b і c, які 
//  будуть отримувати значення з аргументів, під час її виклику.

// Доповни console.log() таким чином, щоб він 
// логував рядок "Addition result equals <result>", 
// де <result> - це сума переданих чисел.

// Оголошена функція add(a, b, c)
// Виклик add(15, 27, 10) виводить у консоль "Addition result equals 52"
// Виклик add(10, 20, 30) виводить у консоль "Addition result equals 60"
// Виклик add(5, 10, 15) виводить у консоль "Addition result equals 30" 


// function add(a,b,c) {
//     console.log(`Addition result equals ${a+b+c}`);
//   }
  
//   add(15, 27, 10);
//   add(10, 20, 30);
//   add(5, 10, 15);


// ====================================================================================

// Доповни код функції add таким чином, щоб вона повертала 
// результат додавання значень трьох параметрів: a, b і c.

// Оголошена функція add(a, b, c)
// У функції add є оператор return
// Виклик add(15, 27, 10) повертає 52
// Виклик add(10, 20, 30) повертає 60
// Виклик add(5, 10, 15) повертає 30
// Виклик функції з випадковими, але валідними аргументами, 
// повертає правильне значення



// function add(a, b, c) {
//     return a + b + c;
//   }
//   console.log(add(15, 27, 10));
//   console.log(add(10, 20, 30));
//   console.log(add(5, 10, 15));


// ===================================================================================

// Функція makeMessage(name, price) створює і повертає повідомлення про покупку. 
// Вона оголошує два параметри, значення яких будуть задаватися під час її виклику.

// name - назва товару
// price - ціна товару
// Доповни код функції таким чином, 
// щоб вона повертала рядок "You picked <product name>, price per item is <product price> credits", 
// де <product name> і <product price> - це значення параметрів name і price.
// Дуже зручно зробити цей рядок з використанням синтаксису шаблонних рядків.

// Увага
// Зверни увагу на те, що в коді відсутній виклик функції makeMessage. 
// З цього завдання і далі ми самі будемо викликати твої функції і перевіряти те, як вони працюють. 
// Результат наших перевірок ти побачиш у блоці Результати під редактором коду.


// function makeMessage (name, price) {
//     return You picked ${name}, price per item is ${price} credits;
   
//   }
  
//   // Example of calling the function
//   const productName = "Example Product";
//   const productPrice = 20;
  
//   const message = makeMessage(productName, productPrice);
//   console.log(message);

// makeMessage();

















/**
Напишіть програму, яка отримає від користувача
 число (кількість хвилин) та виведе в консоль
 рядок у форматі годин та хвилин
 https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
 70 === 01:10
 */


// ============================================================


/**
 *? Напишіть цикл, який виводить у консоль
 *? всі непарні числа  від max до min  за спаданням
//  */
//  const max = 50;
//  const min = 23;

// ==========================================================
/**
 *? За допомогою циклу for складіть
 усі парні числа від min до max
 */
//  const max = 50;
//  const min = 0;
// =======================================================
/**
 *? У змінній min лежить число від 0 до 59.
 *? Визначте, в яку чверть години потрапляє
 *? це число (у першу, другу, третю чи четверту).
 */
//  const min = 59;